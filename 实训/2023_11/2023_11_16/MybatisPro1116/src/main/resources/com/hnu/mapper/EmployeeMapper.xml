<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hnu.mapper.EmployeeMapper">

    <resultMap id="empMap1" type="Employee" autoMapping="true">
        <!-- 一对一的配置  关联其他类型的一个对象 -->
        <association property="dept" javaType="Dept" autoMapping="true">
        </association>
    </resultMap>
    <!-- 查询员工时同时查询对应的部门信息
    联查
      select * from emp,dept where emp.deptno=dept.deptno and emp.empno=7788
    -->
    <select id="getById" resultMap="empMap1">
        select e.empno,e.ename,e.job,e.mgr,e.hiredate,e.sal,e.comm,d.deptno,d.dname,d.loc
        from emp e,dept d where e.deptno=d.deptno and e.empno=#{empno}
    </select>


    <!--
    分两次查询
      select empno,ename....,deptno from emp where empno=7788
      假设查到deptno=10
      select deptno,dname,loc from dept where deptno=10

      fetchType="lazy" 懒加载  获取部门对象时才会去查询部门信息   不获取不查询
    -->
    <resultMap id="empMap2" type="Employee" autoMapping="true">
        <result column="deptno" property="deptno"></result>
        <association property="dept" javaType="Dept"
                     select="com.hnu.mapper.DeptMapper.getById" column="deptno">
        </association>
    </resultMap>

    <select id="getAll" resultMap="empMap2">
        select empno,ename,job,mgr,hiredate,sal,comm,deptno from emp
    </select>

    <!--
    #{ename}  ename -> Ename -> getEname
    #{deptno} getDeptno

    假设我们在Employee类中没有维护private Integer deptno;成员变量  没有getDeptno方法
    如果拿部门编号就需要从Dept对象的身上拿
    #{dept.deptno}
    -->
    <insert id="add">
        insert into emp(ename,job,mgr,hiredate,sal,comm,deptno)
        values(#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{dept.deptno})
    </insert>


    <!-- 条件搜索  尝试传递两个值 -->
    <select id="getByCondition" resultType="Employee">
        select empno,ename,job,mgr,hiredate,sal,comm,deptno from emp
        where
            ename like CONCAT('%',#{enameCondition},'%')
          and job = #{jobCondition}
    </select>


</mapper>